filter {
        # parse for sm
        if [mode] == "delivery" {

                # preformat log received from filebeat input
                grok {
                     patterns_dir   => "/etc/logstash/patterns.d"
                     match => { "message" => "%{SM_DATE:Date} \[%{SM_ID:ID}] %{SM_CM}: %{GREEDYDATA:Extra}|%{SM_DATE:Date} \[%{SM_ID:ID}] %{GREEDYDATA:Extra}" }
                }
        }

        grok {
             patterns_dir   => "/etc/logstash/patterns.d"
             match          => [ "message", "%{SM_PROCESS_DELIVERY_STATUS}" ]
             tag_on_failure => [ "_grok_sm_process_nomatch" ]
             add_tag        => [ "DELIVERY" ]
        }

        grok {
             patterns_dir   => "/etc/logstash/patterns.d"
             match          => [ "message", "%{SM_DELIVERED}" ]
             tag_on_failure => [ "_grok_sm_delivery_nomatch" ]
             add_tag        => [ "DELIVERY" ]
        }

        grok {
             patterns_dir   => "/etc/logstash/patterns.d"
             match          => [ "message", "%{SM_CONNECTION}" ]
             tag_on_failure => [ "_grok_sm_connection_nomatch" ]
             add_tag        => [ "DELIVERY" ]
        }

        grok {
             patterns_dir   => "/etc/logstash/patterns.d"
             match          => [ "message", "%{SM_PMG}" ]
             tag_on_failure => [ "_grok_sm_pmg_nomatch" ]
             add_tag        => [ "DELIVERY" ]
        }

        grok {
             patterns_dir   => "/etc/logstash/patterns.d"
             match          => [ "message", "%{SM_MSID}" ]
             tag_on_failure => [ "_grok_sm_msid_nomatch" ]
             add_tag        => [ "DELIVERY" ]
        }

        grok {
             patterns_dir   => "/etc/logstash/patterns.d"
             match          => [ "message", "%{SM_BOUNCED}" ]
             tag_on_failure => [ "_grok_sm_bounced_nomatch" ]
             add_tag        => [ "DELIVERY" ]
        }

        # Do some data type conversions
        mutate {
               rename => [
                         "[agent][hostname]", "Host",
                         "domain_from", "Domain From",
                         "domain_to", "Domain To",
                         "sm_remote_ip", "Remote IP",
                         "sm_remote_port", "Remote Port",
                         "sm_client_ip", "Client IP",
                         "sm_client_port", "Client Port",
                         "sm_messageid", "Message ID"
                         ]
        }

        mutate {
              remove_field => [
                              "[geoip][real_region_name]",
                              "[geoip][continent_code]",
                              "[geoip][area_code]",
                              "[geoip][dma_code]",
                              "[geoip][ip]",
                              "[geoip][country_code2]",
                              "[geoip][country_code3]",
                              "[geoip][latitude]",
                              "[geoip][location.lat]",
                              "[geoip][location.lon]",
                              "[geoip][longitude]",
                              "[geoip][timezone]",
                              "[geoip][postal_code]",
                              "[geoip][region_code]",
                              "[geoip][region_name]",
                              "[geoip][city_name]",
                              "[geoip][location]",
                              "location"
                              ]
              rename => [
                        "[geoip][country_name]", "Country"
                        ]
        }
}
